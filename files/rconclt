#! /usr/bin/env python3
"""rconclt.

A Minecraft RCON client.

Usage:
    rconclt <server> <command> [<args>...] [options]

Options:
    --help, -h          Shows this paage.
    --passwd=<passwd>   Specifies the respective RCON password.
"""
from docopt import docopt
from logging import INFO, basicConfig, getLogger
from sys import exit as exit_, stderr

from mcipc.config import servers
from mcipc.rcon.client import Client


basicConfig(level=INFO, format='[%(levelname)s] %(name)s: %(message)s')
LOGGER = getLogger('rconclt')


def _get_socket_by_server_name(server):
    """Returns the respective socket by server name."""

    try:
        return servers()[server]
    except KeyError:
        LOGGER.error('No such server: %s.', server)
        exit_(3)


def _get_server_info(server):


    try:
        host, port = server.split(':')
    except ValueError:
        return _get_socket_by_server_name(server)

    try:
        port = int(port)
    except ValueError:
        LOGGER.error('Not an integer: %s.', port)
        exit_(2)

    try:
        passwd, host = host.split('@')
    except ValueError:
        passwd = None

    return (host, port, passwd)


def main(options):
    """Test the packet stuff."""

    host, port, passwd = _get_server_info(options['<server>'])

    if passwd is None:
        passwd = options['--passwd'] or ''

    with Client(host, port) as client:
        if client.login(passwd):
            result = client.run(options['<command>'], *options['<args>'])
            LOGGER.info(result)
        else:
            LOGGER.error('Failed to log in.')
            exit_(1)


if __name__ == '__main__':
    main(docopt(__doc__))
